<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Photo Gallery - Home</title>
    <link rel="stylesheet" href="/public/styles.css">
    <link rel="shortcut icon" href="/ico/photoVoyager-ico-generate.ico" type="image/x-icon">
    <!-- Include Bulma CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">    
</head>
<body>
    <div class="container">
        <h1 class="title">Photo Gallery</h1>

        <!-- Menu -->
        <div class="menu-toggle" id="menuToggle">
            <!-- Icon and menu content -->
            <svg xmlns="svgs/" width="32" height="32" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16" id="menuIcon">
                <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"/>
            </svg>
            <div class="dropdown-content" id="dropdownContent">
                <span class="dropdown-header">Pages</span>
                <a href="/">Home</a>
                <% if (isLoggedIn) { %>
                    <% if (isAdmin) { %>
                        <a href="/admin">Admin Panel</a>
                    <% } %>
                    <a href="/logout">Logout</a>
                <% } else { %>
                    <a href="/login">Login</a>
                    <a href="/register">Register</a>
                <% } %>
                <!-- New category: Information -->
                <span class="dropdown-divider"></span>
                <span class="dropdown-header">Information</span>
                <a href="https://github.com/api-tsukasa/PhotoVoyage">Source Code</a>
                <a href="https://github.com/PhotoVoyage">Github</a>
                <a href="https://github.com/api-tsukasa/PhotoVoyage/issues/new/choose">Help</a>
            </div>
        </div>        
    
        <div class="users-online" id="users-online-container">
            <a href="/active-users"><p>Active Users Count: <span class="emoji-wrapper"><%= activeUsersCount %> <img src="https://cdn3.emoji.gg/emojis/7586-tts-star-online.png" alt="Online Icon" class="emoji-size"></span></p></a>
        </div>        

        <!-- Image upload form -->
        <div class="upload-button">
            <form action="/upload" method="post" enctype="multipart/form-data" id="uploadForm">
                <div class="control">
                    <button type="button" class="button is-primary" id="uploadBtn">Upload Photo</button>
                    <input type="hidden" name="photoName" id="photoName">
                    <input class="file-input" type="file" name="photo" accept="image/*" style="display: none;">
                </div>
            </form>
        </div>
        <div class="uploaded-img-container" id="gallery"></div>
    </div>

    <!-- Modal window for preview -->
    <div id="previewModal" class="modal">
        <span class="close">&times;</span>
        <div class="modal-content">
            <img id="previewImage" class="modal-img">
        </div>
        <div class="zoom-controls">
            <button id="zoomIn">+</button>
            <button id="zoomOut">-</button>
        </div>
        <div class="current-image">
            Image <span id="currentImageNumber"></span> of <span id="totalImages"></span>
        </div>
    </div>
    <script>
        var menuToggle = document.getElementById("menuToggle");
        
        menuToggle.addEventListener("click", function() {
            menuToggle.classList.toggle("active");
        });
        
        // Event listener for the Upload button
        document.getElementById("uploadBtn").addEventListener("click", function() {
            // Ask for the image name
            var imageName = prompt("Please enter the name of the image:");
            if (imageName) {
                // Store the image name in the input field
                document.getElementById('photoName').value = imageName;
                // Click on the file input
                document.querySelector('.file-input').click();
            }
        });

        // Event listener for file input change
        document.querySelector('.file-input').addEventListener('change', function() {
            // Get the form element
            var form = document.getElementById('uploadForm');
            // Submit the form
            form.submit();
            
            // Fetch the photo name and send it to the server
            var photoName = document.getElementById('photoName').value;
            var formData = new FormData();
            formData.append('photoName', photoName);
            
            fetch('/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Photo uploaded successfully:', data);
            })
            .catch(error => {
                console.error('Error uploading photo:', error);
            });
        });

        window.onload = () => {
            fetch('/photos')
            .then(response => response.json())
            .then(data => {
                const gallery = document.getElementById('gallery')
                data.forEach(photo => {
                    const imgContainer = document.createElement('div');
                    imgContainer.classList.add('image-container');

                    const img = document.createElement('img');
                    const filename = photo.filename.toLowerCase();
                    const staticSrc = `/uploads/${filename.split('.')[0]}.gif`;

                    if (filename.endsWith('.gif')) {
                        img.src = staticSrc;
                        img.dataset.src = `/uploads/${filename}`;
                        img.loading = 'lazy'; // Lazy loading
                    } else {
                        img.src = `/uploads/${filename}`;
                    }

                    img.addEventListener('click', function() {
                        const modal = document.getElementById('previewModal');
                        const modalImg = document.getElementById('previewImage');
                        modal.style.display = 'block';

                        // Set the source of the modal image to the original image
                        modalImg.src = img.dataset.src || img.src;
                    });

                    const imageName = document.createElement('div');
                    imageName.textContent = photo.name ? photo.name : 'Unknown';
                    imgContainer.appendChild(img);
                    imgContainer.appendChild(imageName); // Add the image name
                    gallery.appendChild(imgContainer);
                });
            })
            .catch(error => console.error('Error fetching photos:', error));
        };

        let zoomLevel = 1;
        
        document.getElementById('zoomIn').addEventListener('click', function() {
            zoomLevel += 0.1;
            document.getElementById('previewImage').style.transform = `scale(${zoomLevel})`;
        });

        document.getElementById('zoomOut').addEventListener('click', function() {
            zoomLevel -= 0.1;
            document.getElementById('previewImage').style.transform = `scale(${zoomLevel})`;
        });

        let currentImageIndex = 0;

        document.getElementById('previewModal').addEventListener('click', function(event) {
            if (event.target.classList.contains('modal-img')) {
                currentImageIndex = (currentImageIndex + 1) % data.length;
                displayImage(data[currentImageIndex], currentImageIndex + 1, data.length);
            }
        });

        function displayImage(photo, current, total) {
            const modalImg = document.getElementById('previewImage');
            const currentImageNumber = document.getElementById('currentImageNumber');
            const totalImages = document.getElementById('totalImages');

            modalImg.src = photo.src;
            modalImg.style.transform = `scale(1)`;
            zoomLevel = 1;
            currentImageNumber.textContent = current;
            totalImages.textContent = total;
        }

        document.getElementsByClassName('close')[0].addEventListener('click', function() {
            document.getElementById('previewModal').style.display = 'none';
        });
    </script>    
</body>
</html>
